@page "/editPedido/{id:int}"
@inject ListaPedidos listaPedidos
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Components

<h3>Editar Pedido</h3>

<EditForm Model="@pedidoSeleccionado" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />

    <div class="mt-3">
        <label>ID Pedido</label>
        <InputNumber class="form-control" @bind-Value="pedidoSeleccionado.idPedido" />
    </div>

    <div class="mt-3">
        <label>Cliente</label>
        <InputText class="form-control" @bind-Value="pedidoSeleccionado.cliente" />
        <ValidationMessage For="(() => pedidoSeleccionado.cliente)" />
    </div>

    <div class="mt-3">
        <label>Fecha</label>
        <InputDate class="form-control" @bind-Value="pedidoSeleccionado.fecha" />
        <ValidationMessage For="(() => pedidoSeleccionado.fecha)" />
    </div>

    <div class="mt-3">
        <label>Estado</label>
        <InputText class="form-control" @bind-Value="pedidoSeleccionado.estado" />
        <ValidationMessage For="(() => pedidoSeleccionado.estado)" />
    </div>

    <div class="mt-3">
        <label>Total</label>
        <InputNumber class="form-control" @bind-Value="pedidoSeleccionado.total" />
        <ValidationMessage For="(() => pedidoSeleccionado.total)" />
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button type="button" class="btn btn-danger" @onclick="regresar">Regresar</button>
    </div>
</EditForm>

@code {
    [Parameter] public int id { get; set; }  // Id del pedido a editar
    private Pedido pedidoSeleccionado { get; set; } = new Pedido();

    protected override void OnInitialized()
    {
        // Cargar pedido existente para editar
        var p = listaPedidos.GetPedido(id);
        if (p != null)
        {
            pedidoSeleccionado = new Pedido
            {
                idPedido = p.idPedido,
                cliente = p.cliente,
                fecha = p.fecha,
                estado = p.estado,
                total = p.total
            };
        }
        else
        {
            // Si no existe el pedido, volver a la lista
            navigationManager.NavigateTo("/pedidos");
        }
    }

    private void guardar()
    {
        listaPedidos.ActualizarPedido(pedidoSeleccionado);
        navigationManager.NavigateTo("/pedidos");
    }

    private void regresar()
    {
        navigationManager.NavigateTo("/pedidos");
    }
}
